apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  namespace: service-provider
  labels:
    app: redis
    tier: cache
    component: caching-service
  annotations:
    backup.velero.io/backup-volumes: redis-data
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      tier: cache
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: redis
        tier: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: kubernetes.io/hostname
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
      - name: redis
        image: redis:7.0-alpine
        command: ["redis-server"]
        args:
        - "--requirepass"
        - "$(REDIS_PASSWORD)"
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: service-provider-secrets
              key: ConnectionStrings__Redis
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.44.0
        ports:
        - containerPort: 9121
          name: metrics
        resources:
          requests:
            cpu: "100m"
            memory: "64Mi"
          limits:
            cpu: "200m"
            memory: "128Mi"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
      - name: redis-config
        configMap:
          name: redis-config