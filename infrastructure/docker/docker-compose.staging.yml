version: '3.8'

name: service-provider-staging

services:
  web-app:
    build:
      context: ../../src/web
      dockerfile: ../../infrastructure/docker/web-app.dockerfile
      args:
        NODE_ENV: staging
    image: ${DOCKER_REGISTRY}/web-app:staging
    environment:
      - NODE_ENV=staging
      - API_URL=http://api-gateway:5000
      - LOG_LEVEL=${LOG_LEVEL:-Information}
    ports:
      - "8080:80"
    depends_on:
      - api-gateway
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  api-gateway:
    build:
      context: ../../src/backend
      dockerfile: ../../infrastructure/docker/api-gateway.dockerfile
    image: ${DOCKER_REGISTRY}/api-gateway:staging
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - Redis__ConnectionString=redis:6379
      - Authentication__Authority=https://login.microsoftonline.com/
      - Logging__LogLevel__Default=${LOG_LEVEL:-Information}
      - CORS__AllowedOrigins=http://web-app:8080
    ports:
      - "5000:80"
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  redis:
    image: redis:6.2-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      encrypted: "true"

volumes:
  redis-data:
    driver: local
    driver_opts:
      type: none
      device: /data/redis
      o: bind