name: Pull Request Validation

on:
  pull_request:
    branches: 
      - main
      - develop
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NODE_VERSION: '18.x'
  DOTNET_VERSION: '6.0.x'

permissions:
  contents: read
  pull-requests: write
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-frontend:
    name: Validate Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/web

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/web/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        
      - name: Type Check
        run: npm run type-check

      - name: Run Unit Tests
        run: npm run test:unit
        
      - name: Run E2E Tests
        run: npm run test:e2e
        
      - name: Build Frontend
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: src/web/dist
          retention-days: 7

  validate-backend:
    name: Validate Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies
        run: dotnet restore ServiceProvider.sln

      - name: Build Solution
        run: dotnet build ServiceProvider.sln --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test ServiceProvider.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --settings CodeCoverage.runsettings

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/TestResults'
          retention-days: 7

  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: [validate-frontend, validate-backend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_TYPESCRIPT_ES: true
          VALIDATE_CSS: true
          VALIDATE_CSHARP: true
          VALIDATE_YAML: true
          VALIDATE_JSON: true

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Service Provider Management'
          path: '.'
          format: 'HTML'
          args: >
            --suppression suppression.xml
            --failOnCVSS 7
            --enableRetired

      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: reports
          retention-days: 7

  validation-complete:
    name: Validation Complete
    needs: [validate-frontend, validate-backend, security-scan]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    
    steps:
      - name: Check Build Status
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1

      - name: Validation Succeeded
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        run: echo "All validation checks passed successfully!"